name: Deployment
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    name: Compile application, deploy with ssh and systemd.
    runs-on: ubuntu-latest
    env:
      SSH_KEY_PATH: ${{ github.workspace }}/../private.key
      APP_NAME: json-relay-server
    steps:
      - uses: actions/checkout@v2
      
      - uses: Swatinem/rust-cache@v1
      
      - name: Compile Rust
        run: cargo +stable build --release
      
      - name: Format Systemd unit file
        run: envsubst < systemd.service > $APP_NAME.service

      # Credits https://stackoverflow.com/a/60479844
      - name: Copy SSH key and known hosts
        if: ${{ env.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ../private.key
          sudo chmod 600 ../private.key
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
      
      - name: Deploy with rsync
        if: ${{ env.SSH_USER }}
        run: | 
          rsync -e "ssh -i $SSH_KEY_PATH" target/release/$APP_NAME $APP_NAME.service $SSH_USER@$SSH_HOST:/tmp/$APP_NAME/
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: Setup service with ssh
        if: ${{ env.SSH_USER }}
        run: |
          ssh -q -oBatchMode=yes -i $SSH_KEY_PATH $SSH_USER@$SSH_HOST
          cd /tmp/${{ env.APP_NAME }}/
          if sudo systemctl is active ${{ env.APP_NAME }}.service; then \ 
            sudo systemctl stop ${{ env.APP_NAME }}.service; \
          fi
          sudo mv ${{ env.APP_NAME }}.service /etc/systemd/system/
          sudo mv ${{ env.APP_NAME }} /usr/local/bin/
          sudo systemctl enable --now ${{ env.APP_NAME }}.service
          cd ..
          rm -r ${{ env.APP_NAME }}
          sleep 1
          systemctl status ${{ env.APP_NAME }}.service
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
